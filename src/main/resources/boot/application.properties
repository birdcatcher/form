# self defined config, dsiable access control
application.security=false

# HTTPS create self-signing cert under project root dir
# keytool -genkey -alias tomcat
# -storetype PKCS12 -keyalg RSA -keysize 2048
# -keystore keystore.p12 -validity 3650
# TODO: Tomcat comment it out
server.port=8443
server.ssl.key-store=keystore.p12
server.ssl.key-store-password=changeit
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=tomcat

# CAS authentication, requires HTTPS
cas.server-url=https://jasigcas.herokuapp.com/cas
cas.server-login-url=https://jasigcas.herokuapp.com/cas/login
cas.client-url=https://localhost:8443/login/cas
# TODO: Tomcat add war file name in URL
#cas.client-url=https://localhost:8443/boot/login/cas

# H2 default DB
spring.h2.console.enabled=true

# MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/test
#spring.datasource.username=test
#spring.datasource.password=test

# Oracle
#spring.datasource.url=jdbc:oracle:thin:@myhost:1521:orcl
#spring.datasource.url=jdbc:oracle:thin:@//devora.cpn6giqkcmve.us-west-2.rds.amazonaws.com:1521/ORCL
#spring.datasource.username=devora
#spring.datasource.password=mydevora
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# DB initializer schema.sql and data.sql
#spring.datasource.initialize=true
#spring.datasource.continue-on-error=true
# DB specific schema-oracel.sql & data-oracle.sql
#spring.datasource.platform=oracle

# JPA force manual DDL 
#spring.jpa.generate-ddl=false
#spring.jpa.hibernate.ddl-auto=none

# Hibernate
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect